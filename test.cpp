#include <ctime>
#include <ncurses.h>
#include <stdlib.h>
#include <unistd.h>
typedef unsigned int BYTE;
using namespace std;
#define HEIGHT 5
#define WIDTH 5

class Block {
  public:
    BYTE **get_block() {
        srand(time(0));
        int random = rand() % 46;
        BYTE **copy_block = (BYTE **)malloc(sizeof(BYTE *) * 5);
        for (int i = 0; i < 5; i++) {
            copy_block[i] = (BYTE *)malloc(sizeof(BYTE) * 5);
        }
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                copy_block[i][j] = blocks[random][i][j];
            }
        }
        return copy_block;
    }

  private:
    BYTE blocks[46][5][5] = {

        // 0 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {1, 1, 1, 1, 1},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}},

        // 1 block
        {{0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0}},
        // 2 block
        {{0, 0, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 1, 0, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 0, 0, 0, 0}},
        // 3 block
        {{0, 0, 0, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 0, 0}},
        // 4 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 5 block
        {{0, 0, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},

        // 6 block
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},

        // 7 block
        {{0, 0, 0, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 1, 0, 0, 0},
         {0, 0, 0, 0, 0}},

        // 8 block
        {{0, 0, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}},

        // 9 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},

        // 10 block
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 11 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 0, 1, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 12 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 1, 0, 1, 0},
         {0, 0, 0, 0, 0}},

        // 13 block
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0}},
        // 14 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 1, 1, 1},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}},
        // 15 block
        {{0, 0, 0, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 1}},
        // 16 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 1},
         {0, 0, 0, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 1, 0, 0, 0}},

        // 17 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 18 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 19 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 20 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 1, 0, 0, 0},
         {0, 0, 0, 0, 0}},

        // 21 block
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},

        // 22 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 23 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},
        // 24 block
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},

        // 25 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 0, 0}},
        // 26 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},
        // 27 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        // 28 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 1, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 29 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},

        // 30 block
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},

        // 31 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 1, 1, 0, 0},
         {0, 0, 0, 0, 0}},

        // 32 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},

        // 33 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},

        // 34 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 35 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},

        // 36 block
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},

        // 37 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 1, 1, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}},
        // 38 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 0, 0, 0, 0}},
        // 39 block
        {{0, 0, 0, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},
        // 40 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}},

        // 41 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},

        // 42 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},

        // 43 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},

        // 44 block
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}},

        // 45 block
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}}

    };
};
void DrawBox(int y, int x, BYTE **blocks);
void basic_box(int y, int x);
int main() {
    int i, j;
    BYTE **b;
    Block blc;
    b = blc.get_block();
    for (i = 0; i < 5; i++) {
        for (j = 0; j < 5; j++) {
            printf("%d ", b[i][j]);
        }
        printf("\n");
    }
    initscr();
    start_color();
    int y = 0;
    int x = 0;

    int row = 0; // y
    int col = 0; // x
    DrawBox(row, col, b);
    refresh();
    int ch;
    int coord_x = 10, coord_y = 10;
    WINDOW *win;
    cbreak();
    keypad(stdscr, TRUE);

    win = newwin(5, 10, coord_y, coord_x);
    waddch(win, '#');
    while ((ch = getch()) != KEY_F(2)) {
        wborder(win, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ');

        wrefresh(win);

        switch (ch) {
        case KEY_LEFT:
            col--;
            if (col < 0) //
            {
                break;
            }
            DrawBox(row, col, b);
            break;

        case KEY_RIGHT:
            col++;
            DrawBox(row, col, b);
            break;

        case KEY_UP:
            row--;
            if (row < 0) //
            {
                break;
            }
            DrawBox(row, col, b);
            break;

        case KEY_DOWN:
            row++;
            DrawBox(row, col, b);
            break;
        }

        box(win, 0, 0);

        wrefresh(win);
    }
    delwin(win);
    getch();
    endwin();
    return 0;
}
void DrawBox(int y, int x, BYTE **blocks) {
    int i, j;
    for (i = 0; i < 5; i++) {
        for (j = 0; j < 5; j++) {
            if (blocks[i][j] == 1) {
                basic_box(y + i * 2.7, x + j * 2.7);
            }
        }
    }
}

void basic_box(int y, int x) {
    int i, j;
    move(y, x);
    addch(ACS_ULCORNER);
    for (i = 0; i < 1; i++) {
        addch(ACS_HLINE);
        addch(ACS_URCORNER);
    }
    for (j = 0; j < 1; j++) {
        move(y + j + 1, x);
        addch(ACS_VLINE);
        move(y + j + 1, x + 1 + 1);
        addch(ACS_VLINE);
    }
    move(y + j + 1, x);
    addch(ACS_LLCORNER);
    for (i = 0; i < 1; i++)
        addch(ACS_HLINE);
    addch(ACS_LRCORNER);
}
